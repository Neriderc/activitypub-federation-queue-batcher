name: ghcr-image-main

on:
  push:
    branches:
      - main
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{ github.repository }}/base

jobs:
  build-and-publish-base-image:
    name: Build and publish base images for all platforms

    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read
      packages: write

    outputs:
      base-image: >-
        ${{
          steps.custom-meta.outputs.base-image-name
        }}@${{
          fromJSON(steps.build.outputs.metadata)['containerimage.digest']
        }}

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
        with:
          driver-opts: network=host

      - name: Log in to GHCR
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && 'true' || 'false' }}
            type=semver,pattern={{version}},event=tag
            type=sha,enable={{is_default_branch}}

      - name: Extract base image name
        id: custom-meta
        run: |
          echo "base-image-name=${DOCKER_TAG%%:*}" | tee -a $GITHUB_OUTPUT
        env:
          DOCKER_TAG: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}

      - name: Build and push Docker image to GHCR
        id: build
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true
          cache-from: ${{ steps.custom-meta.outputs.base-image-name }}:buildcache
          cache-to: ${{ steps.custom-meta.outputs.base-image-name }}:buildcache

  build-and-push-images-with-entrypoint:
    name: Build and publish images with entrypoints for all platforms

    needs:
      - build-and-publish-base-image

    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        image:
          - inbox-receiver
          - batch-sender
          - batch-receiver

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Log in to GHCR
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.image }}
          tags: |
            # set latest tag for default branch
            # type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=latest,enable=true

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          file: ${{ matrix.image }}.Dockerfile
          build-args: |
            BASE_IMAGE=${{ needs.build-and-publish-base-image.outputs.base-image }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true
